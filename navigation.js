/*
 PLEASE DO NOT EDIT THIS FILE FROM ANYWHERE BUT ESPN.ESD.AdSales.Common.Web PROJECT.
 */

(function ($, toastr) {

    if (!$.fn.adSalesNavigation) {
        $.fn.adSalesNavigation = function (options) {
            var $self = this,
                openItem = 'ad-navigation-open',
                topLevelListItemsSelector = '> ul > li',
                disabledApplication = '.ad-navigation-application-disabled',
                disabledListItem = '.ad-navigation-disabled',
                advancedSearchSelector = '.ad-navigation-advancedSearch',
                quickSearchInputSelector = '#ad-navigation-search',
                invalidInputClass = 'ad-invalid-input',
                invalidButtonClass = 'ad-invalid-button',
                jumpToInputId = '#jumpToId',
                jumpToButtonId = '#jumpTo',
                customNavigationNamespace = '.ad-navigation-event',
                customMouseEnterEvent = 'mouseenter' + customNavigationNamespace,
                $body = $('body'),
                $listItems = $self.find(topLevelListItemsSelector),
                $jumpTo = $(jumpToInputId, $self),
                $advancedSearchContentContainer = $('.ad-navigation-search-content', $self),
                settings = $.extend({
                    advancedSearchContent: '',
                    quickSearchCallback: $.noop,
                    jumpToPlaceholder: 'Enter ID or name...',
                    jumpToCallback: $.noop,
                    jumpToMask: function (event) {
                        var idVal = $jumpTo.val(),
                            currentIndex = idVal.length;

                        // Allow: backspace, delete, tab, escape, and enter
                        if (!(event.keyCode === 46 || event.keyCode === 8 || event.keyCode === 9 || event.keyCode === 27 || event.keyCode === 13 ||
                            // Allow: Ctrl+A
                            (event.keyCode === 65 && event.ctrlKey === true) ||
                            // Allow: Ctrl+C
                            (event.keyCode === 67 && event.ctrlKey === true) ||
                            // Allow: Ctrl+V
                            (event.keyCode === 86 && event.ctrlKey === true) ||
                            // Allow: Ctrl+X
                            (event.keyCode === 88 && event.ctrlKey === true) ||
                            // Allow: p in first position
                            (event.keyCode === 80 && currentIndex === 0) ||
                            // Allow: home, end, left, right
                            (event.keyCode >= 35 && event.keyCode <= 39))) {
                            // Ensure that it is a number and stop the keypress
                            if (((event.shiftKey || (event.keyCode < 48 || event.keyCode > 57)) && (event.keyCode < 96 || event.keyCode > 105)) || (idVal.length > 9) /* ALM 1356 - can only fit so many digits into an int on the server */) {
                                event.preventDefault();
                            }
                        }

                        // fire callback on Return
                        if (event.keyCode === 13 && idVal.length > 0) {
                            settings.jumpToCallback.call($jumpTo);
                        }
                    }
                }, options),
                current = -1,
                close = function () {
                    $self.off(customNavigationNamespace, topLevelListItemsSelector);

                    $listItems.eq(current).removeClass(openItem);
                    current = -1;
                },
                open = function (event) {
                    var $item = $(event.currentTarget),
                        idx = $item.index();

                    if ($item.hasClass(disabledListItem.substring(1))) {
                        return false;
                    }

                    $self
                        .off(customNavigationNamespace, topLevelListItemsSelector)
                        .on(customMouseEnterEvent, topLevelListItemsSelector, open);

                    if (current !== -1) {
                        $listItems.eq(current).removeClass(openItem);
                    }

                    if (current === idx && event.type !== 'mouseenter') {
                        $item.removeClass(openItem);
                        current = -1;
                    }
                    else {
                        $item.addClass(openItem);
                        current = idx;
                        $body
                            .off('click', close)
                            .on('click', close);
                    }

                    // want to let all sub-menu selections bubble so they are caught by body click handler, only don't bubble if it's top level menu item
                    return !$item.hasClass('ad-navigation-open');
                },
                jumpToError = function () {
                    $jumpTo.addClass(invalidInputClass);
                    $(jumpToButtonId, $self).addClass(invalidButtonClass);

                    if (toastr) {
                        toastr.options = { timeOut: 3000, extendedTimeOut: 1000, positionClass: 'toast-center' };
                        toastr.error('The ID you have selected does not exist.  Please select another ID.');//, '', { timeOut: 2000, extendedTimeOut: 1000, positionClass: 'toast-center' });
                    }
                },
                jumpToClear = function () {
                    $jumpTo.removeClass(invalidInputClass).val('');
                    $(jumpToButtonId, $self).removeClass(invalidButtonClass);
                },
                init = function () {
                    // use advanced search content provided
                    $advancedSearchContentContainer.append(settings.advancedSearchContent);

                    $jumpTo.attr('placeholder', settings.jumpToPlaceholder);

                    // configure event handlers
                    $self
                        .on('click', [disabledListItem, disabledApplication].join(','), function () {
                            return false;
                        })
                        .on('click', topLevelListItemsSelector, open)
                        .on('mouseenter', topLevelListItemsSelector, function () {
                            $(this).trigger(customMouseEnterEvent);
                        })
                        .on('click', advancedSearchSelector, function () {
                            var advancedSearchMenuPosition = $('.ad-navigation-search', $self).position(),
                                effect = 'blind';

                            if ($advancedSearchContentContainer.is(':visible')) {
                                $advancedSearchContentContainer.hide({
                                    effect: effect
                                });
                            } else {
                                $advancedSearchContentContainer
                                    .css("left", advancedSearchMenuPosition.left + 28)
                                    .show({
                                        effect: effect
                                    });
                            }
                        })
                        .on('click', jumpToButtonId, function () {
                            var idVal = $jumpTo.val();

                            if (idVal.length > 0) {
                                settings.jumpToCallback.call($jumpTo);
                            }
                        })
                        .on('keydown', jumpToInputId, settings.jumpToMask)
                        .on('keyup', jumpToInputId, function () {
                            // <CP ALM 1357>
                            if ($jumpTo.val().length === 0) {
                                jumpToClear();
                            }
                        })
                        .on('keydown', quickSearchInputSelector, function (event) {
                            var $advancedSearchInput = $(this),
                                searchTerm = $advancedSearchInput.val();

                            // fire callback on Return
                            if (event.keyCode === 13 && searchTerm.length > 0) {
                                settings.quickSearchCallback.call($advancedSearchInput);
                            }
                        });

                    // attach functions that encapsulate common behavior/functionality
                    $self.jumpToError = jumpToError;
                    $self.jumpToClear = jumpToClear;
                    $self.jumpTo = $jumpTo;
                };

            // some way to make sure markup was generated by corresponding extension method
            if (!$self.hasClass('ad-navigation-menu')) {
                return $self;
            }

            init();

            return $self;
        };
    }

}(jQuery, toastr || undefined));
